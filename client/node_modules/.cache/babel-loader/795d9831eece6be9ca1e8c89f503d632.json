{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelogbewe/coding/web_apps/vimation/client/src/users/index.js\";\nimport React, { Component } from 'react';\nimport UsersTable from './Table';\n\nclass UsersPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showLoader: true,\n      dataSource: []\n    }; // make fetch to transactions route \n  }\n\n  componentDidMount() {\n    const url = 'http://localhost:4000/users';\n    setTimeout(() => {\n      () => console.log(\"finished\");\n    }, 10000);\n    fetch(url).then(response => response.json()).then(data => {\n      this.setState({\n        dataSource: data.users.map(user => {\n          return {\n            key: user.id,\n            name: user.name,\n            id: user.id,\n            accountNumber: user.accountNumber,\n            not: user.numberOfTransactions,\n            balance: user.balance == 0 ? \"0.00\" : user.balance,\n            rating: user.meta.rating\n          };\n        }),\n        showLoader: false\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.pageWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(UsersTable, {\n      loading: this.state.showLoader,\n      dataSource: this.state.dataSource,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default UsersPage;\nconst styles = {\n  pageWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '0 2.2em',\n    height: '100%',\n    width: '100%'\n  }\n};","map":{"version":3,"sources":["/Users/emmanuelogbewe/coding/web_apps/vimation/client/src/users/index.js"],"names":["React","Component","UsersTable","UsersPage","constructor","props","state","showLoader","dataSource","componentDidMount","url","setTimeout","console","log","fetch","then","response","json","data","setState","users","map","user","key","id","name","accountNumber","not","numberOfTransactions","balance","rating","meta","render","styles","pageWrapper","display","flexDirection","padding","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,SAAvB;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAEhCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAG,IADJ;AAETC,MAAAA,UAAU,EAAG;AAFJ,KAAb,CAHc,CAQd;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,GAAG,GAAG,6BAAZ;AACAC,IAAAA,UAAU,CAAC,MAEN;AAAE,YAAMC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAN;AAA8B,KAF3B,EAE4B,KAF5B,CAAV;AAGAC,IAAAA,KAAK,CAACJ,GAAD,CAAL,CACCK,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEOG,IAAD,IAAU;AACd,WAAKC,QAAL,CACI;AAAEX,QAAAA,UAAU,EAAGU,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAI;AACpC,iBAAO;AACLC,YAAAA,GAAG,EAAED,IAAI,CAACE,EADL;AAELC,YAAAA,IAAI,EAAEH,IAAI,CAACG,IAFN;AAGLD,YAAAA,EAAE,EAAGF,IAAI,CAACE,EAHL;AAILE,YAAAA,aAAa,EAAGJ,IAAI,CAACI,aAJhB;AAKLC,YAAAA,GAAG,EAAGL,IAAI,CAACM,oBALN;AAMLC,YAAAA,OAAO,EAAEP,IAAI,CAACO,OAAL,IAAgB,CAAhB,GAAoB,MAApB,GAA6BP,IAAI,CAACO,OANtC;AAOLC,YAAAA,MAAM,EAAGR,IAAI,CAACS,IAAL,CAAUD;AAPd,WAAP;AASC,SAVY,CAAf;AAWEvB,QAAAA,UAAU,EAAG;AAXf,OADJ;AAeD,KAlBD;AAoBD;;AAEDyB,EAAAA,MAAM,GAAG;AACL,wBACE;AAAK,MAAA,KAAK,EAAEC,MAAM,CAACC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAK5B,KAAL,CAAWC,UAAhC;AAA6C,MAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE,UAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADF;AAKH;;AA9C+B;;AAiDlC,eAAeL,SAAf;AAEA,MAAM8B,MAAM,GAAG;AACXC,EAAAA,WAAW,EAAG;AACVC,IAAAA,OAAO,EAAE,MADC;AAEVC,IAAAA,aAAa,EAAE,QAFL;AAGVC,IAAAA,OAAO,EAAG,SAHA;AAKVC,IAAAA,MAAM,EAAG,MALC;AAMVC,IAAAA,KAAK,EAAG;AANE;AADH,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport UsersTable from './Table'\n\nclass UsersPage extends Component {\n\n  constructor(props){\n      super(props);\n\n      this.state = {\n          showLoader : true ,\n          dataSource : []\n      }\n\n      // make fetch to transactions route \n  }\n\n  componentDidMount(){\n    const url = 'http://localhost:4000/users';\n    setTimeout((\n     \n    ) => { () => console.log(\"finished\")},10000);\n    fetch(url)\n    .then(response => response.json())\n    .then((data) => {\n      this.setState(\n          { dataSource : data.users.map(user => {\n            return {\n              key: user.id,\n              name: user.name,\n              id : user.id,\n              accountNumber : user.accountNumber,\n              not : user.numberOfTransactions,\n              balance: user.balance == 0 ? \"0.00\" : user.balance,\n              rating : user.meta.rating\n            }\n            }),\n            showLoader : false\n          }\n        )\n    })\n\n  }\n  \n  render() {\n      return (\n        <div style={styles.pageWrapper}>\n            <UsersTable loading={this.state.showLoader}  dataSource={this.state.dataSource}/>\n        </div>\n      )\n  }\n\n}\nexport default UsersPage;\n\nconst styles = {\n    pageWrapper : {\n        display: 'flex',\n        flexDirection: 'column',\n        padding : '0 2.2em',\n    \n        height : '100%',\n        width : '100%',\n        \n    }\n}\n"]},"metadata":{},"sourceType":"module"}
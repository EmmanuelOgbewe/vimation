{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelogbewe/coding/web_apps/vimation/client/src/transactions/Form.js\";\nimport React, { Component } from 'react';\nimport { Button, Alert, InputNumber, Form, Select } from 'antd';\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nclass TransactionForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = values => {\n      this.toggleLoader();\n      const url = \"http://localhost:4000/transactions\";\n      const Data = {\n        from: values.from,\n        to: values.to,\n        amount: values.amount\n      };\n      const params = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(Data)\n      };\n      fetch(url, params).then(res => res.json()).then(data => {\n        console.log(data);\n\n        if (data.error) {\n          this.setState({\n            showLoader: false,\n            showErrorCard: true,\n            alertMessage: err\n          });\n        }\n\n        this.toggleLoader(); // this.props.onClear();\n      });\n    };\n\n    this.toggleLoader = () => {\n      this.setState({\n        showLoader: !this.state.showLoader\n      });\n    };\n\n    this.users = () => {\n      return this.props.users.map(user => /*#__PURE__*/React.createElement(Select.Option, {\n        key: user.id,\n        value: user.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 10\n        }\n      }, user.name));\n    };\n\n    this.onClose = e => {\n      console.log(e, \"error card closed\");\n    };\n\n    this.errorAlert = () => {\n      return /*#__PURE__*/React.createElement(Alert, {\n        message: \"Invalid Transaction\",\n        description: this.state.alertMessage,\n        type: \"error\",\n        closable: true,\n        onClose: this.onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 12\n        }\n      });\n    };\n\n    this.state = {\n      showLoader: false,\n      showErrorCard: false,\n      alertMessage: \"\",\n      alertTitle: \"\",\n      alertType: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n      name: \"basic\",\n      initialValues: {\n        remember: false\n      },\n      onFinish: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"From\",\n      name: \"from\",\n      rules: [{\n        required: true,\n        message: 'Please select a user'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, this.users())), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"To\",\n      name: \"to\",\n      rules: [{\n        required: true,\n        message: 'Please select a user'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, this.users())), /*#__PURE__*/React.createElement(Form.Item, {\n      name: ['amount'],\n      label: \"Amount\",\n      rules: [{\n        type: 'number',\n        min: 10,\n        max: 10000000\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      loading: this.state.showLoader,\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, \"Transfer\")), this.state.showErrorCard ? this.errorAlert() : null);\n  }\n\n}\n\nexport default TransactionForm;","map":{"version":3,"sources":["/Users/emmanuelogbewe/coding/web_apps/vimation/client/src/transactions/Form.js"],"names":["React","Component","Button","Alert","InputNumber","Form","Select","layout","labelCol","span","wrapperCol","tailLayout","offset","TransactionForm","constructor","props","onSubmit","values","toggleLoader","url","Data","from","to","amount","params","method","headers","body","JSON","stringify","fetch","then","res","json","data","console","log","error","setState","showLoader","showErrorCard","alertMessage","err","state","users","map","user","id","name","onClose","e","errorAlert","alertTitle","alertType","render","remember","required","message","type","min","max"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\nimport {Button,Alert,InputNumber, Form, Select } from 'antd';\n\n\nconst layout = {\n    labelCol: {\n      span: 8,\n    },\n    wrapperCol: {\n      span: 16,\n    },\n  };\nconst tailLayout = {\n    wrapperCol: {\n      offset: 8,\n      span: 16,\n    },\n};\n\n\n\nclass TransactionForm extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = ({\n      showLoader : false,\n      showErrorCard : false,\n      alertMessage : \"\",\n      alertTitle : \"\",\n      alertType : \"\"\n    })\n  }\n\n  onSubmit = (values) => {\n\n    this.toggleLoader();\n    const url = \"http://localhost:4000/transactions\";\n    const Data = {\n        from : values.from,\n        to : values.to,\n        amount : values.amount\n    }\n    const params = {\n        method : \"POST\",\n        headers: {\n            \"Content-Type\" : \"application/json\"\n        },\n        body : JSON.stringify(Data),\n        \n    }\n    fetch(url,params)\n    .then(res => res.json())\n    .then(data => {\n        console.log(data);\n        if(data.error){\n          this.setState({\n            showLoader : false,\n            showErrorCard : true,\n            alertMessage : err\n          })\n        }\n        this.toggleLoader();\n        // this.props.onClear();\n    })\n  \n\n  }\n  toggleLoader = () => {\n    this.setState({\n      showLoader : !this.state.showLoader\n    })\n  }\n  users = () => {\n    return this.props.users.map(user => \n         <Select.Option key={user.id} value={user.id}>{user.name}</Select.Option>)\n  }\n\n  onClose = (e) => {\n    console.log(e,\"error card closed\");\n  }\n\n  errorAlert = () => {\n    return <Alert\n      message=\"Invalid Transaction\"\n      description={this.state.alertMessage}\n      type=\"error\"\n      closable\n      onClose={this.onClose}\n    />\n  }\n\n  render() {\n      return (\n        <Form\n          {...layout}\n          name=\"basic\"\n          initialValues={{\n            remember : false \n          }}\n          onFinish={this.onSubmit}\n          \n          >\n              <Form.Item\n                label=\"From\"\n                name=\"from\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please select a user'\n                    }\n                ]}\n              >\n                <Select>\n                    {this.users()}\n                </Select>\n                  \n              </Form.Item>\n              <Form.Item\n                label=\"To\"\n                name=\"to\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please select a user'\n                    }\n                ]}\n              >\n                <Select>\n                    {this.users()}\n                </Select>\n                  \n              </Form.Item>\n              <Form.Item\n                name={['amount']}\n                label=\"Amount\"\n                rules={[\n                {\n                    type: 'number',\n                    min: 10,\n                    max: 10000000,\n                },\n                ]}\n                >\n                <InputNumber />\n              </Form.Item>\n              <Form.Item {...tailLayout}>\n                <Button loading={this.state.showLoader} type=\"primary\" htmlType=\"submit\">\n                    Transfer\n                </Button>\n            </Form.Item>\n            {this.state.showErrorCard ? this.errorAlert() : null}\n        </Form>\n      )\n  }\n}\nexport default TransactionForm \n\n"]},"metadata":{},"sourceType":"module"}